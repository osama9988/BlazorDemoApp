@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject CustomAuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h3>Login</h3>

<EditForm Model="loginRequest" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username: </label>
        <InputText @bind-Value="loginRequest.UserName" />
    </div>
    <div>
        <label>Password: </label>
        <InputText @bind-Value="loginRequest.UserPass" type="password" />
    </div>
    <button type="submit">Login</button>
</EditForm>

@code {
    private Base0_MyAppUser_Login loginRequest = new Base0_MyAppUser_Login();
    [Parameter] public string ReturnUrl { get; set; } = "/";

    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);
        var returnUrlQuery = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (returnUrlQuery.ContainsKey("returnUrl"))
        {
            ReturnUrl = returnUrlQuery["returnUrl"];
        }
    }

    private async Task HandleLogin()
    {
        if (await AuthService.LoginAsync(loginRequest))
        {
            await AuthenticationStateProvider.MarkUserAsAuthenticated(await AuthService.GetToken());
            NavigationManager.NavigateTo(ReturnUrl);
        }
        else
        {
            // Handle login failure
            Console.Error.WriteLine("Login failed");
        }
    }
}
